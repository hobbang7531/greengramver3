[2024-05-21 10:47:46 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 5420 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 10:47:46 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:47:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:47:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1060 ms[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:47:47 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.162 seconds (process running for 2.56)[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@424e2bb6[0;39m
[2024-05-21 10:47:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:47:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 10:47:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 10:49:10 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 1176 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 10:49:10 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:49:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:49:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 945 ms[0;39m
[2024-05-21 10:49:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.007 seconds (process running for 2.367)[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@15f944c[0;39m
[2024-05-21 10:49:12 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:49:17 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@6ef2216a[0;39m
[2024-05-21 10:49:17 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'hobbang'
 {executed in 3 msec}[0;39m
[2024-05-21 10:49:17 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----|----|---|----|-----------|-----------|
|user_id |uid |upw |nm |pic |created_at |updated_at |
|--------|----|----|---|----|-----------|-----------|
|--------|----|----|---|----|-----------|-----------|
[0;39m
[2024-05-21 10:49:17 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÏïÑÏù¥ÎîîÎ•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÏïÑÏù¥ÎîîÎ•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@78efd32a[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'yerim'
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid   |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|1       |yerim |$2a$10$R4Ay2a7Xv.1637N.CHgiyOwpnFCitOcpcyg2tExoKA956eMzOvxyC |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |null       |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:31 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:31 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:34 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:51 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 10:49:51 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:51 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:49:53 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 3
 {executed in 8 msec}[0;39m
[2024-05-21 10:49:56 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:49:56 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:56 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:49:59 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:49:59 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:00 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:00 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:03 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=4)[0;39m
[2024-05-21 10:50:03 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:03 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:50:03 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {executed in 6 msec}[0;39m
[2024-05-21 10:50:08 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:50:08 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:08 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:10 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:10 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:50:12 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:50:12 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:50:19 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 10:50:19 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 10:51:18 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 4428 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 10:51:18 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:51:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:51:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 978 ms[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:51:19 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.05 seconds (process running for 2.436)[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77b862ab[0;39m
[2024-05-21 10:51:20 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:51:24 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:51:24 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:24 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:51:24 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:24 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:24 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:24 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:24 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:25 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:51:25 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:25 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:28 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:28 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:29 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-3' for key 'PRIMARY'[0;39m
[2024-05-21 10:51:29 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 3
 {FAILED after 6 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:51:29 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:51:30 [33mWARN [0;39m http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-3' for key 'PRIMARY'[0;39m
[2024-05-21 10:51:30 [31mERROR[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:51:30 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:51:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:51:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:51:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:51:45 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:45 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:51:45 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:51:46 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:51:46 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:51:46 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:51:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_favorite
        WHERE feed_id = 9
        AND   user_id = 1
 {executed in 6 msec}[0;39m
[2024-05-21 10:51:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_favorite
        SET feed_id = 9,
            user_id = 1
 {executed in 2 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:34 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:34 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:57:58 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 10:57:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:57:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:57:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:57:59 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:57:59 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:02 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 10:58:02 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:02 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:06 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:06 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:08 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:09 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:09 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:09 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:12 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:12 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:15 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:15 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:35 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:35 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:36 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:36 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=2)[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents  |nm   |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?! |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ      |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã      |1212 |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã     |2024-05-16 17:51:08 |[null]     |1     |
|--------|----------|----------|-----|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 2
 {executed in 7 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:41 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:41 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 10:58:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:58:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:45 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:58:45 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:50 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:50 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:51 [33mWARN [0;39m http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:51 [31mERROR[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:51 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:52 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:52 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:52 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [33mWARN [0;39m http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [33mWARN [0;39m http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [33mWARN [0;39m http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:53 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 10:58:54 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:54 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:58:54 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:54 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:54 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:54 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:58:54 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:58:55 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [33mWARN [0;39m http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [33mWARN [0;39m http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [33mWARN [0;39m http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:55 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:56 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:56 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:56 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:56 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:56 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:56 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:57 [33mWARN [0;39m http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:57 [31mERROR[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:57 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:57 [33mWARN [0;39m http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 10:58:57 [31mERROR[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:57 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:20 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:20 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:26 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:59:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:59:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:32 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:32 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:32 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:49 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 10:59:49 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:49 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:51 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:51 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 10:59:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 10:59:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 10:59:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 10:59:53 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 10:59:53 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 10:59:54 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-3' for key 'PRIMARY'[0;39m
[2024-05-21 10:59:54 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:59:54 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:21 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:21 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 11:00:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:00:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:23 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:23 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:25 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:00:25 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:27 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:27 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:00:28 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:28 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:28 [33mWARN [0;39m http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 0,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:28 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
; (conn=35) Duplicate entry '0-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=35) Duplicate entry '0-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:16)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:21)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:00:42 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:00:42 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:42 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:00:42 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:42 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:00:42 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:00:42 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:00:42 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 37 class path changes (0 additions, 0 deletions, 37 modifications)[0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 4428 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:01:17 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 286 ms[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 0.54 seconds (process running for 600.905)[0;39m
[2024-05-21 11:01:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-05-21 11:01:24 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 37 class path changes (0 additions, 0 deletions, 37 modifications)[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m Thread-7] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 4428 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 279 ms[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 0.493 seconds (process running for 607.984)[0;39m
[2024-05-21 11:01:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-05-21 11:02:27 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 11176 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:02:27 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:02:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:02:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1096 ms[0;39m
[2024-05-21 11:02:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.203 seconds (process running for 2.573)[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:02:29 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@686f821d[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:02:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:02:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:02:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:30 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:30 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:32 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:32 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:02:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:02:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:02:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:34 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:02:34 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:02:36 [33mWARN [0;39m http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-3' for key 'PRIMARY'[0;39m
[2024-05-21 11:02:36 [31mERROR[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=45) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:02:36 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=45) Duplicate entry '1-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=45) Duplicate entry '1-3' for key 'PRIMARY'
; (conn=45) Duplicate entry '1-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=45) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:03:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:03:14 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:03:15 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 10560 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:03:15 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:03:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:03:15 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:03:16 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 982 ms[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.156 seconds (process running for 2.519)[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8d8f555[0;39m
[2024-05-21 11:03:17 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:18 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:18 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:20 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:20 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:03:23 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'signedUserId' in 'class com.green.greengramver3.userfollow.userfollowmodel.FollowReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:82)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:97)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:65)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:91)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:304)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:72)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.delFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.delFollow(UserFollowService.java:19)
	at com.green.greengramver3.userfollow.UserFollowController.delFollow(UserFollowController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:03:38 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:03:38 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:03:40 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 8904 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:03:40 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:03:40 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:03:40 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 963 ms[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.043 seconds (process running for 2.408)[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1754e6bb[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:03:44 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 0
        AND   to_user_id = 0
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:46 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 0
        AND   to_user_id = 0
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:03:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:03:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:03:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:03:49 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:03:49 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:03:50 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-3' for key 'PRIMARY'[0;39m
[2024-05-21 11:03:50 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=65) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:03:50 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=65) Duplicate entry '1-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=65) Duplicate entry '1-3' for key 'PRIMARY'
; (conn=65) Duplicate entry '1-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=65) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:04:26 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:04:26 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:04:27 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 3452 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:04:27 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:04:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 937 ms[0;39m
[2024-05-21 11:04:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.022 seconds (process running for 2.398)[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2640f1cd[0;39m
[2024-05-21 11:04:29 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:04:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:04:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:04:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:04:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:04:39 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:04:39 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:04:40 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:04:41 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 0
        AND   to_user_id = 0
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:07 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:05:07 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:05:09 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 10768 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:05:09 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:05:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:05:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:05:10 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 931 ms[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 1.992 seconds (process running for 2.356)[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41502c7e[0;39m
[2024-05-21 11:05:11 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:05:13 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:05:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:14 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:14 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-3' for key 'PRIMARY'[0;39m
[2024-05-21 11:05:15 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:15 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
; (conn=85) Duplicate entry '1-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:15 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:15 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 11:05:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:16 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:16 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:18 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-3' for key 'PRIMARY'[0;39m
[2024-05-21 11:05:18 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:18 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
; (conn=85) Duplicate entry '1-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:20 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=3)[0;39m
[2024-05-21 11:05:20 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:20 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:22 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:22 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:25 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:25 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:26 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:26 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:27 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:27 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment |created_at          |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ    |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£   |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:28 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:28 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:29 [33mWARN [0;39m http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:05:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET user_id = 3,
            feed_id = 14,
            comment = 'ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ'
 {executed in 6 msec}[0;39m
[2024-05-21 11:05:31 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET user_id = 3,
            feed_id = 14,
            comment = 'ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ'
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:31 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|12        |
|----------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:32 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:32 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:36 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:36 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:36 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:37 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:37 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:38 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:05:38 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:38 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 11:05:41 [33mWARN [0;39m http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '1-3' for key 'PRIMARY'[0;39m
[2024-05-21 11:05:41 [31mERROR[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:41 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
; (conn=85) Duplicate entry '1-3' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=85) Duplicate entry '1-3' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:05:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:05:42 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:05 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:06:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:05 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:05 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:05 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:06 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:06 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:48 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:48 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:06:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:49 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:49 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:06:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:55 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:55 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:56 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:56 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:06:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:06:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:06:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:06:57 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:06:57 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:07:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:07:06 [33mWARN [0;39m http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:07:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:07:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 748 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:07:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 952 ms[0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:07:59 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.039 seconds (process running for 2.414)[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5a95f4f6[0;39m
[2024-05-21 11:08:00 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:07 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:07 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:08:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:08:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:12 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:12 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:08:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:08:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:08:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:08:13 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:08:13 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:08:14 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:08:16 [33mWARN [0;39m http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:09:27 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m
[2024-05-21 11:09:27 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:09:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:09:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 748 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 282 ms[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 0.516 seconds (process running for 91.168)[0;39m
[2024-05-21 11:09:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-05-21 11:09:58 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 9112 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:09:58 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:09:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:09:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 958 ms[0;39m
[2024-05-21 11:09:59 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.037 seconds (process running for 2.407)[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@548dbc69[0;39m
[2024-05-21 11:10:00 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:01 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:10:01 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:10:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:10:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:10:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:10:08 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:10:08 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:10:09 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:10:10 [33mWARN [0;39m http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:10:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:10:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:10:57 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 4124 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:10:57 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:10:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:10:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 949 ms[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:10:58 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.012 seconds (process running for 2.369)[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6462c34b[0;39m
[2024-05-21 11:10:59 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:11:07 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:11:16 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:11:16 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:11:17 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 10748 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:11:17 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:11:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:11:17 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 949 ms[0;39m
[2024-05-21 11:11:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.011 seconds (process running for 2.373)[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1ee65040[0;39m
[2024-05-21 11:11:19 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:11:22 [33mWARN [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] [36mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengramver3.common.ResultDto<java.lang.Integer> com.green.greengramver3.userfollow.UserFollowController.delFollow(com.green.greengramver3.userfollow.userfollowmodel.FollowReq)][0;39m
[2024-05-21 11:11:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:11:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:11:46 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 7416 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:11:46 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:11:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:11:46 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 959 ms[0;39m
[2024-05-21 11:11:47 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.093 seconds (process running for 2.493)[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 3 ms[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@af85b6a[0;39m
[2024-05-21 11:11:48 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:51 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:51 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:52 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:11:52 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:11:55 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:11:55 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:55 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:55 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:55 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:55 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:55 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:55 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:55 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:57 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:11:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:11:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:11:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:11:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:11:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:11:57 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:11:57 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:57 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:58 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:58 [33mWARN [0;39m http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:58 [31mERROR[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:58 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [33mWARN [0;39m http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:11:59 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:12:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:00 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:00 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:00 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:00 [33mWARN [0;39m http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [33mWARN [0;39m http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [33mWARN [0;39m http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:00 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [33mWARN [0;39m http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:12:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:01 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:01 [33mWARN [0;39m http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [33mWARN [0;39m http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [33mWARN [0;39m http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:01 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:02 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=4)[0;39m
[2024-05-21 11:12:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:02 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:02 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:02 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:02 [33mWARN [0;39m http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '3-4' for key 'PRIMARY'[0;39m
[2024-05-21 11:12:02 [31mERROR[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 3,
            to_user_id = 4
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:02 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
### The error may exist in file [D:\Yerim\BackEnd\GreengramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?,             to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
; (conn=135) Duplicate entry '3-4' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=135) Duplicate entry '3-4' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy89.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy94.postFollow(Unknown Source)
	at com.green.greengramver3.userfollow.UserFollowService.postFollow(UserFollowService.java:15)
	at com.green.greengramver3.userfollow.UserFollowController.postFollow(UserFollowController.java:20)
	at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:12:04 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:12:04 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:12:06 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 7640 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:12:06 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:12:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:12:06 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 953 ms[0;39m
[2024-05-21 11:12:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.051 seconds (process running for 2.426)[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8b86ce6[0;39m
[2024-05-21 11:12:08 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:12:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:10 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:10 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:11 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 2 msec}[0;39m
[2024-05-21 11:12:13 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 1
        AND   to_user_id = 3
 {executed in 2 msec}[0;39m
[2024-05-21 11:12:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 6 msec}[0;39m
[2024-05-21 11:12:16 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 1
        AND   to_user_id = 3
 {executed in 2 msec}[0;39m
[2024-05-21 11:12:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:12:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:12:34 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 2916 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:12:34 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:12:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:12:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 957 ms[0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:12:35 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.032 seconds (process running for 2.397)[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@665f95cc[0;39m
[2024-05-21 11:12:36 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=3, profileUserId=null)[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |1     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |1     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:37 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:37 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:12:40 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:40 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:40 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:40 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:40 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:40 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:40 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:41 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:42 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 7 msec}[0;39m
[2024-05-21 11:12:44 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:12:44 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:44 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:46 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:47 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:12:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:47 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:49 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:49 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:12:58 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:12:58 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:58 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:12:58 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:12:58 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:12:58 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:21 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:13:21 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:13:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:13:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:13:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:13:24 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:13:24 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:13:57 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:13:57 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:14:20 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 10744 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:14:20 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:14:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:14:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:14:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1008 ms[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.07 seconds (process running for 2.423)[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@c014ab0[0;39m
[2024-05-21 11:14:22 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:23 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:14:23 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:14:27 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:14:27 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:27 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:14:27 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:27 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:27 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:27 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:14:27 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:07 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:15:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:15:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:07 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:07 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:07 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:15:10 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:10 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:15:10 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:10 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:10 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:10 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:10 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:15:14 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:15:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:15:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:14 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:14 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:15:14 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:17:50 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:17:50 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:17:52 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 5228 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:17:52 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:17:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:17:52 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 917 ms[0;39m
[2024-05-21 11:17:53 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.044 seconds (process running for 2.413)[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5234c2e9[0;39m
[2024-05-21 11:17:54 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:17:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:17:57 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 1
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 1, 1, 0)) AS following,
            SUM(IF(to_user_id = 1, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 1, 1, 0) +
                    if(FROM_user_id = 1 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 1;
 {executed in 3 msec}[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |1       |2      |1         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:17:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:17:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:17:57 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:18:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:01 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 1
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 1, 1, 0)) AS following,
            SUM(IF(to_user_id = 1, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 1, 1, 0) +
                    if(FROM_user_id = 1 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 1;
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |1       |2      |1         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:18:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:01 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:01 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment  |created_at          |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ     |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£    |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|---------|--------------------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:34 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:34 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 14,
            comment = 'ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ'
 {executed in 7 msec}[0;39m
[2024-05-21 11:18:41 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 14,
            comment = 'ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ'
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:41 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|13        |
|----------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:43 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:18:43 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=4)[0;39m
[2024-05-21 11:19:16 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 4
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 4, 1, 0)) AS following,
            SUM(IF(to_user_id = 4, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 4, 1, 0) +
                    if(FROM_user_id = 4 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 4;
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-------|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm     |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|-------|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |2024-05-16 18:06:54 |1       |1      |0         |1        |0           |
|-------|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:19:16 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 4

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:19:16 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:16 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:19:16 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:18 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:18 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 3
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 3, 1, 0)) AS following,
            SUM(IF(to_user_id = 3, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 3, 1, 0) +
                    if(FROM_user_id = 3 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 3;
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm   |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |2       |2      |1         |1        |1           |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:19 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:21 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE
        FROM user_follow
        WHERE from_user_id = 1
        AND   to_user_id = 3
 {executed in 5 msec}[0;39m
[2024-05-21 11:19:22 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
        SET from_user_id = 1,
            to_user_id = 3
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:24 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:24 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:19:43 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 5600 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 11:19:43 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:19:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:19:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 971 ms[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:19:44 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.023 seconds (process running for 2.371)[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@27c38d59[0;39m
[2024-05-21 11:19:45 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=1)[0;39m
[2024-05-21 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 1
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 1, 1, 0)) AS following,
            SUM(IF(to_user_id = 1, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 1, 1, 0) +
                    if(FROM_user_id = 1 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 1;
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |1       |2      |1         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|feed_id |writer_id |contents |nm |pic                                      |location |created_at          |updated_at |isfav |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
|9       |1         |11       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11       |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|---------|---|-----------------------------------------|---------|--------------------|-----------|------|
[0;39m
[2024-05-21 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 11:19:48 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 11:19:48 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 11:33:47 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:33:47 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 14:18:44 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 1188 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 14:18:44 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 14:18:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 14:18:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1056 ms[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 14:18:45 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 2.296 seconds (process running for 2.723)[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ddbf0f0[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |1     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:46 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:46 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:53 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 15,
            comment = '„Ñπ„Öá„Öã„Öã'
 {executed in 2 msec}[0;39m
[2024-05-21 14:18:53 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 15,
            comment = '„Ñπ„Öá„Öã„Öã'
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:53 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|16        |
|----------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |1     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:55 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:55 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_favorite
        WHERE feed_id = 14
        AND   user_id = 1
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_favorite
        SET feed_id = 14,
            user_id = 1
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |1     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |1     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 14:18:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:18:59 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=3)[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 3
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 3, 1, 0)) AS following,
            SUM(IF(to_user_id = 3, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 1 AND to_user_id = 3, 1, 0) +
                    if(FROM_user_id = 3 AND to_user_id = 1, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 3;
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm   |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |3       |4      |2         |2        |3           |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |1     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:19:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |1     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |1     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |1     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |1     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |1     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 14:19:05 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 14:19:05 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 14:20:37 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:20:37 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 14:20:37 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 14:20:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 9,
            comment = '„Öú„Öú„Öú„Öú„Öú'
 {executed in 6 msec}[0;39m
[2024-05-21 14:20:40 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET user_id = 1,
            feed_id = 9,
            comment = '„Öú„Öú„Öú„Öú„Öú'
 {executed in 0 msec}[0;39m
[2024-05-21 14:20:40 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|17        |
|----------|
[0;39m
[2024-05-21 14:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=1, profileUserId=null)[0;39m
[2024-05-21 14:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 1 msec}[0;39m
[2024-05-21 14:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|feed_id |writer_id |contents |nm |pic |location |created_at |updated_at |isfav |
|--------|----------|---------|---|----|---------|-----------|-----------|------|
|--------|----------|---------|---|----|---------|-----------|-----------|------|
[0;39m
[2024-05-21 14:20:56 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@4694fd2c[0;39m
[2024-05-21 14:20:56 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:20:56 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:20:57 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:00 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@336145a7[0;39m
[2024-05-21 14:21:00 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:00 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:00 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:03 [32mINFO [0;39m http-nio-8080-exec-6] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@3942a16f[0;39m
[2024-05-21 14:21:03 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:03 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:03 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:06 [32mINFO [0;39m http-nio-8080-exec-2] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@7880c815[0;39m
[2024-05-21 14:21:06 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:06 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:06 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:07 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@6287ed6[0;39m
[2024-05-21 14:21:07 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 1 msec}[0;39m
[2024-05-21 14:21:07 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:07 [31mERROR[0;39m http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:09 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@2678b528[0;39m
[2024-05-21 14:21:09 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:09 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:09 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:10 [32mINFO [0;39m http-nio-8080-exec-7] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@2dbe62ba[0;39m
[2024-05-21 14:21:10 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'Ïú†Î∂ÄÏ¥àÎ∞•'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:10 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|user_id |uid  |upw                                                          |nm   |pic                                      |created_at          |updated_at |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
|3       |Ïú†Î∂ÄÏ¥àÎ∞• |$2a$10$hoj6B182JEZqgk38YG8VU.5dPEl5owCXBOJzO/erDHhdaH4jqrf6a |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |null       |
|--------|-----|-------------------------------------------------------------|-----|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:10 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:29 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@38e66748[0;39m
[2024-05-21 14:21:29 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'yerim'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:29 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid   |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|1       |yerim |$2a$10$R4Ay2a7Xv.1637N.CHgiyOwpnFCitOcpcyg2tExoKA956eMzOvxyC |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |null       |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:29 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:32 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@41316d3b[0;39m
[2024-05-21 14:21:32 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'yerim'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:32 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid   |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|1       |yerim |$2a$10$R4Ay2a7Xv.1637N.CHgiyOwpnFCitOcpcyg2tExoKA956eMzOvxyC |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |null       |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:32 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:34 [32mINFO [0;39m http-nio-8080-exec-5] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@7adcc96b[0;39m
[2024-05-21 14:21:34 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'yerim'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:34 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid   |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|1       |yerim |$2a$10$R4Ay2a7Xv.1637N.CHgiyOwpnFCitOcpcyg2tExoKA956eMzOvxyC |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |null       |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:34 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:38 [32mINFO [0;39m http-nio-8080-exec-1] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@222fa01f[0;39m
[2024-05-21 14:21:38 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'yerim'
 {executed in 0 msec}[0;39m
[2024-05-21 14:21:38 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid   |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|1       |yerim |$2a$10$R4Ay2a7Xv.1637N.CHgiyOwpnFCitOcpcyg2tExoKA956eMzOvxyC |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |2024-05-16 16:26:05 |null       |
|--------|------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 14:21:38 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî] with root cause[0;39m
java.lang.RuntimeException: ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
	at com.green.greengramver3.user.UserService.signIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver3.user.UserService$$SpringCGLIB$$0.signIn(<generated>)
	at com.green.greengramver3.user.UserController.signIn(UserController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 14:21:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 14:21:55 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 17:00:07 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarting GreengramVer3Application using Java 17.0.10 with PID 10600 (D:\Yerim\BackEnd\GreengramVer3\build\classes\java\main started by Administrator in D:\Yerim\BackEnd\GreengramVer3)[0;39m
[2024-05-21 17:00:07 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 17:00:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 17:00:07 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 925 ms[0;39m
[2024-05-21 17:00:08 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m restartedMain] [com.green.greengramver3.GreengramVer3Application] [36mStarted GreengramVer3Application in 1.964 seconds (process running for 2.341)[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.74] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3be7c4d8[0;39m
[2024-05-21 17:00:09 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.74] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 17:00:35 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.user.UserController] [36mpic : org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@79663c74[0;39m
[2024-05-21 17:00:35 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignUpReq@3c539585[0;39m
[2024-05-21 17:00:35 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'hobbang',
            upw = '$2a$10$V38hrEWJPnZoiYvdr/tebufM/ayUs6L/CorZ.J1L5x1YzRoD2sr2q',
            nm = 'ÏòàÎ¶º',
            pic = '7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif'
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:35 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'hobbang',
            upw = '$2a$10$V38hrEWJPnZoiYvdr/tebufM/ayUs6L/CorZ.J1L5x1YzRoD2sr2q',
            nm = 'ÏòàÎ¶º',
            pic = '7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif'
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:35 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|5         |
|----------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-8] [com.green.greengramver3.user.UserController] [36mreq : com.green.greengramver3.user.usermodel.SignInReq@54729cef[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = 'hobbang'
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid     |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|--------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|5       |hobbang |$2a$10$V38hrEWJPnZoiYvdr/tebufM/ayUs6L/CorZ.J1L5x1YzRoD2sr2q |ÏòàÎ¶º |7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif |2024-05-21 17:00:35 |null       |
|--------|--------|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=5, profileUserId=null)[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 5

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |0     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |0     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|17              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Öú„Öú„Öú„Öú„Öú   |2024-05-21 14:20:40 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:38 [32mINFO [0;39m http-nio-8080-exec-9] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=17, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Öú„Öú„Öú„Öú„Öú, createdAt=2024-05-21 14:20:40, updatedAt=null)][0;39m
[2024-05-21 17:00:43 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET user_id = 5,
            feed_id = 15,
            comment = '„Ö†„Ö†'
 {executed in 7 msec}[0;39m
[2024-05-21 17:00:43 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET user_id = 5,
            feed_id = 15,
            comment = '„Ö†„Ö†'
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:43 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|18        |
|----------|
[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=5, profileUserId=3)[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.nm, A.pic, A.created_at AS createdAt,
            B.feedCnt, B.favCnt,
            C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
            SELECT A.writer_id,
            COUNT(DISTINCT A.feed_id) AS feedCnt,
            COUNT(B.user_id) AS favCnt
            FROM feed A
            LEFT JOIN feed_favorite B
            ON A.feed_id = B.feed_id
            WHERE A.writer_id = 3
        ) B
        INNER JOIN (
            SELECT
            SUM(IF(from_user_id = 3, 1, 0)) AS following,
            SUM(IF(to_user_id = 3, 1, 0)) AS follower,
            IFNULL(
                sum(
                    if(from_user_id = 5 AND to_user_id = 3, 1, 0) +
                    if(FROM_user_id = 3 AND to_user_id = 5, 2, 0)
                )
            ,0) AS followState
            FROM user_follow
        ) C
        WHERE A.user_id = 3;
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 5

            WHERE A.writer_id = 3

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm   |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |2024-05-16 18:02:11 |3       |4      |2         |2        |0           |
|-----|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm   |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |0     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |0     |
|--------|----------|-----------|-----|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|18              |5       |ÏòàÎ¶º |7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif |„Ö†„Ö†      |2024-05-21 17:00:43 |
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=18, writerId=5, feedId=0, writerNm=ÏòàÎ¶º, writerPic=7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif, comment=„Ö†„Ö†, createdAt=2024-05-21 17:00:43, updatedAt=null), GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:46 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:46 [32mINFO [0;39m http-nio-8080-exec-10] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedController] [36mp : GetFeedReq(feedId=0, signedUserId=5, profileUserId=null)[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.writer_id AS writerId, A.contents, B.nm AS writerNm, B.pic AS writerPic,
               A.location, A.created_at AS createdAt, A.updated_at AS updatedAt,
                IF(C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 5

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|feed_id |writer_id |contents   |nm     |pic                                      |location  |created_at          |updated_at |isfav |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
|15      |3         |ÏòàÎ¶ºÏù¥ Î∞îÎ≥¥Îã§    |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã        |2024-05-21 14:17:02 |[null]     |0     |
|14      |3         |„Öã„Öã„Öã„Öã       |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |„Öã„Öã„Öã       |2024-05-17 14:45:05 |[null]     |0     |
|13      |4         |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§! |ÍπÄÎèôÌòÑÏïÑÎãàÎã§ |6c3121c2-f640-4904-9abe-03f55f44efde.png |ÎÇò ÍπÄÎèôÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:07:21 |[null]     |0     |
|12      |3         |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§! |Ïú†Î∂ÄÏ¥àÎ∞•   |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÎÇò Î∞±Ï∞ΩÌòÑ ÏïÑÎãàÎã§ |2024-05-16 18:02:34 |[null]     |0     |
|11      |2         |Îπ®Î¶¨Îπ®Î¶¨ ÏïàÌï¥?!  |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |ÍπÄÎØºÏßÄ       |2024-05-16 17:54:19 |[null]     |0     |
|10      |2         |„Öã„Öã„Öã„Öã       |1212   |d356c1be-d7c2-4b5f-80d4-c0c74412d34b.JPG |„Öã„Öã„Öã„Öã      |2024-05-16 17:51:08 |[null]     |0     |
|9       |1         |11         |ÏòàÎ¶º     |00ef1554-a17a-4081-9433-71a8289268a2.png |11        |2024-05-16 16:54:21 |[null]     |0     |
|--------|----------|-----------|-------|-----------------------------------------|----------|--------------------|-----------|------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|18              |5       |ÏòàÎ¶º |7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif |„Ö†„Ö†      |2024-05-21 17:00:43 |
|16              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:18:53 |
|15              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Ñπ„Öá„Öã„Öã    |2024-05-21 14:17:57 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=18, writerId=5, feedId=0, writerNm=ÏòàÎ¶º, writerPic=7d76e70a-8c05-49a2-b71b-7b604064b8d1.gif, comment=„Ö†„Ö†, createdAt=2024-05-21 17:00:43, updatedAt=null), GetCommentRes(feedCommentId=16, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:18:53, updatedAt=null), GetCommentRes(feedCommentId=15, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Ñπ„Öá„Öã„Öã, createdAt=2024-05-21 14:17:57, updatedAt=null)][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|548e83a6-6799-4958-a86c-48ea748eed24.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|feed_comment_id |user_id |nm   |pic                                      |comment   |created_at          |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
|13              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ |2024-05-21 11:18:41 |
|12              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ  |2024-05-21 11:05:31 |
|11              |1       |ÏòàÎ¶º   |00ef1554-a17a-4081-9433-71a8289268a2.png |Î≠êÌïòÎÉêÍ≥µ      |2024-05-17 14:45:56 |
|10              |3       |Ïú†Î∂ÄÏ¥àÎ∞• |c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg |ÌÇºÌÇº„ÖãÌÇ§„Ö£     |2024-05-17 14:45:11 |
|----------------|--------|-----|-----------------------------------------|----------|--------------------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=13, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïò§Ïòπ, createdAt=2024-05-21 11:18:41, updatedAt=null), GetCommentRes(feedCommentId=12, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÏïÑ Î≠êÌïòÎÉêÍ≥†Ïò§Ïòπ, createdAt=2024-05-21 11:05:31, updatedAt=null), GetCommentRes(feedCommentId=11, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=Î≠êÌïòÎÉêÍ≥µ, createdAt=2024-05-17 14:45:56, updatedAt=null), GetCommentRes(feedCommentId=10, writerId=3, feedId=0, writerNm=Ïú†Î∂ÄÏ¥àÎ∞•, writerPic=c10ef16b-e089-4d81-b5f7-ea1430081d0f.jpg, comment=ÌÇºÌÇº„ÖãÌÇ§„Ö£, createdAt=2024-05-17 14:45:11, updatedAt=null)][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88335762-d1a1-4c3e-ba5f-1c972e34cdba.jpg |
|85a7cf45-6ac5-4ee0-83c1-123e21feda10.jpg |
|8f279b9b-b849-46df-9167-798e803535db.png |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|7               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |4444    |2024-05-16 18:45:09 |
|6               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |3333    |2024-05-16 18:45:07 |
|5               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |1233    |2024-05-16 18:29:13 |
|3               |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |11111   |2024-05-16 18:21:09 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=7, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=4444, createdAt=2024-05-16 18:45:09, updatedAt=null), GetCommentRes(feedCommentId=6, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=3333, createdAt=2024-05-16 18:45:07, updatedAt=null), GetCommentRes(feedCommentId=5, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=1233, createdAt=2024-05-16 18:29:13, updatedAt=null), GetCommentRes(feedCommentId=3, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=11111, createdAt=2024-05-16 18:21:09, updatedAt=null)][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|15cec5ab-962c-4f9a-9b7e-d87a0aa93fa8.jpg |
|4353ad5b-c21c-44e9-98db-38f5b8bab0eb.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cb00a134-6acb-4888-a3fb-41e137483389.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0c298e3c-d856-4ebb-82c9-c6e0e2d21b56.JPG |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|----|--------|-----------|
|feed_comment_id |user_id |nm |pic |comment |created_at |
|----------------|--------|---|----|--------|-----------|
|----------------|--------|---|----|--------|-----------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [][0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5bc1f196-466a-4397-a60e-4fb487b4c0d9.gif |
|-----------------------------------------|
[0;39m
[2024-05-21 17:00:54 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId, A.user_id AS writerId, B.nm AS writerNm
                , B.pic AS writerPic, A.comment, A.created_at AS createdAt
        FROM feed_comment A
        JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|feed_comment_id |user_id |nm |pic                                      |comment |created_at          |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
|17              |1       |ÏòàÎ¶º |00ef1554-a17a-4081-9433-71a8289268a2.png |„Öú„Öú„Öú„Öú„Öú   |2024-05-21 14:20:40 |
|----------------|--------|---|-----------------------------------------|--------|--------------------|
[0;39m
[2024-05-21 17:00:54 [32mINFO [0;39m http-nio-8080-exec-3] [com.green.greengramver3.feed.FeedService] [36mcomList [GetCommentRes(feedCommentId=17, writerId=1, feedId=0, writerNm=ÏòàÎ¶º, writerPic=00ef1554-a17a-4081-9433-71a8289268a2.png, comment=„Öú„Öú„Öú„Öú„Öú, createdAt=2024-05-21 14:20:40, updatedAt=null)][0;39m
[2024-05-21 17:01:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_id = 5,
            contents = '11',
            location = '11'
 {executed in 1 msec}[0;39m
[2024-05-21 17:01:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_id = 5,
            contents = '11',
            location = '11'
 {executed in 0 msec}[0;39m
[2024-05-21 17:01:44 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------|
|insert_id |
|----------|
|16        |
|----------|
[0;39m
[2024-05-21 17:01:44 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES

            (16, 'e314de5a-ebad-4b8d-92c3-ebf59cbe7e25.gif')
         , 
            (16, 'af2306b4-cdcc-4302-8aba-ef775ea92de2.gif')
         , 
            (16, '0f544cf4-adae-49ff-bd19-b48c0b4858f3.gif')
 {executed in 0 msec}[0;39m
[2024-05-21 17:03:46 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_favorite
        WHERE feed_id = 16
        AND   user_id = 5
 {executed in 0 msec}[0;39m
[2024-05-21 17:03:46 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_favorite
        SET feed_id = 16,
            user_id = 5
 {executed in 2 msec}[0;39m
[2024-05-21 17:03:57 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 17:03:57 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
